um = ((pop_growth[28,3]-pop_growth[1,3])/1552)/mean(pop_growth$population)
other_parms = c(seeding, um)
other_parms = c(seed, um)
other_parms = c("seed"=seed, "um"=um)
other_parms
saveRDS(other_parms,"other_parms.rds")
rm(list=ls())
library(deSolve)
library(RColorBrewer)
library(reshape2)
library(tidyverse)
library(ggplot2)
library(cowplot)
library(sjstats)
library(cdcfluview)
library(zoo)
library(imputeTS)
library(readxl)
library(tidycensus)
"%notin%" = Negate('%in%')
setwd("C:/Users/hansencl/OneDrive - National Institutes of Health/Desktop/GitHub Updates/Data")
#Get population estimates for the most recent population size estimate
#This will be scaled down to the 1995 population size for the burn-in period
#you can fill in the initiate_compartments spreadsheet or use the code below
pop = get_estimates(
geography = "county",
product = "characteristics",
breakdown = c("AGEGROUP"),
breakdown_labels = TRUE,
state = "WA",
county = "King",
year = 2022
)%>%
select(AGEGROUP,value)
new_agegrps = c("all","0to4","5to9",rep("10to19",2),rep("20-39",4),rep("40to64",5),rep("65+",5))
pop = pop %>%
mutate(new_age = new_agegrps) %>%
group_by(new_age) %>%
summarize(population = sum(value))
yinit=matrix(c(pop[1,2]*.034,rep(0,12),
pop[1,2]*.034,rep(0,12),
pop[1,2]*.034,rep(0,12),
0,pop[1,2]*.034,1,rep(0,10),
0,pop[1,2]*.034,1,rep(0,10),
0,pop[1,2]*.034,1,rep(0,10),
0,pop[1,2]*.2,1,rep(0,10),
0,pop[1,2]*.6,1,rep(0,10),
0,pop[2,2],1,rep(0,10),
0,pop[3,2],1,rep(0,10),
0,pop[4,2],1,rep(0,10),
0,pop[5,2],1,rep(0,10),
0,pop[6,2],1,rep(0,10)),byrow=TRUE,nrow=13)
colnames(yinit) = c("M","S0","I1","R1","S1","I2","R2","S2","I3","R3","S3","I4","R4")
yinit=as.matrix(yinit)
saveRDS(yinit,"yinit.rds")
#format the data for feeding into the model
N_ages <- nrow(yinit)
agenames <- c("<2m","2-3m","4-5m","6-7m","8-9m","10-11m","1Y","2-4Y","5-9Y","10-19Y","20-39Y","40-64Y","65Y+")
al <- N_ages
rownames(yinit) <- agenames
yinit.vector <- as.vector(unlist(yinit))
name.array <- array(NA, dim=dim(yinit))
for(i in 1:dim(name.array)[1]){
for(j in 1:dim(name.array)[2]){
name.array[i,j] <- paste(dimnames(yinit)[[1]][i],dimnames(yinit)[[2]][j]  )
}
}
name.vector <- as.vector(name.array)
names(yinit.vector) <- name.vector
#look-up your jurisdictions population size in 1995
pop_1980 = 1270000
yinit.vector = yinit.vector*(pop_1980/sum(yinit.vector)) #population in 1980/current population
saveRDS(yinit.vector, "yinit.vector.rds")
#seeding 1 infection per 100,000 (based on 2022 population)
seed = sum(unlist(yinit))/100000 #seeding 1 infection per 100,000 (based on 2022 population)
# 2. Birth Rates --------------------------------------------------------
births = readRDS("birth_rates_by_county.rds") %>%
filter(county==53033) %>%
mutate(mmwr_year=as.numeric(year),
mmwr_week=as.numeric(1)) %>%
select(mmwr_year,mmwr_week, birth_rate)
# 2. Birth Rates --------------------------------------------------------
births = readRDS("Demographic Data/birth_rates_by_county.rds") %>%
filter(county==53033) %>%
mutate(mmwr_year=as.numeric(year),
mmwr_week=as.numeric(1)) %>%
select(mmwr_year,mmwr_week, birth_rate)
# 2. Birth Rates --------------------------------------------------------
births = readRDS("Demographic Data/birth_rates_by_county.rds") %>%
filter(county=="King COunty") %>%
mutate(mmwr_year=as.numeric(year),
mmwr_week=as.numeric(1)) %>%
select(mmwr_year,mmwr_week, birth_rate)
# 2. Birth Rates --------------------------------------------------------
births = readRDS("Demographic Data/birth_rates_by_county.rds")# %>%
View(births)
# 2. Birth Rates --------------------------------------------------------
births = readRDS("Demographic Data/birth_rates_by_county.rds") %>%
filter(county_code==033) %>%
mutate(mmwr_year=as.numeric(year),
mmwr_week=as.numeric(1)) %>%
select(mmwr_year,mmwr_week, birth_rate)
# 2. Birth Rates --------------------------------------------------------
births = readRDS("Demographic Data/birth_rates_by_county.rds") %>%
filter(county_code==033) #%>%
# 2. Birth Rates --------------------------------------------------------
births = readRDS("Demographic Data/birth_rates_by_county.rds") #%>%
View(births)
# 2. Birth Rates --------------------------------------------------------
births = readRDS("Demographic Data/birth_rates_by_county.rds") %>%
filter(state=="WA",county=="King COunty") #%>%
View(births)
# 2. Birth Rates --------------------------------------------------------
births = readRDS("Demographic Data/birth_rates_by_county.rds") %>%
filter(state=="WA",county=="King County") #%>%
# 2. Birth Rates --------------------------------------------------------
births = readRDS("Demographic Data/birth_rates_by_county.rds") %>%
filter(state=="WA",county=="King County") %>%
mutate(mmwr_year=as.numeric(year),
mmwr_week=as.numeric(1)) %>%
select(mmwr_year,mmwr_week, birth_rate)
View(births)
births_1980 = data.frame(mmwr_year=seq(1980:1994),mmwr_week=rep(1,15),birth_rate=rep(births$birth_rate[1],5))
View(births_1980)
births = rbind(births_1980,births)
View(births)
births_1980 = data.frame(mmwr_year=seq(1980:1994),mmwr_week=rep(1,15),birth_rate=rep(births$birth_rate[1],5))
View(births)
# 2. Birth Rates --------------------------------------------------------
births = readRDS("Demographic Data/birth_rates_by_county.rds") %>%
filter(state=="WA",county=="King County") %>%
mutate(mmwr_year=as.numeric(year),
mmwr_week=as.numeric(1)) %>%
select(mmwr_year,mmwr_week, birth_rate)
class(births$mmwr_year)
class(births_1980$mmwr_year)
births_1980 = data.frame(mmwr_year=as.numeric(seq(1980:1994)),mmwr_week=rep(1,15),birth_rate=rep(births$birth_rate[1],5))
# 2. Birth Rates --------------------------------------------------------
births = readRDS("Demographic Data/birth_rates_by_county.rds") %>%
filter(state=="WA",county=="King County") %>%
mutate(mmwr_year=as.numeric(year),
mmwr_week=as.numeric(1)) %>%
select(mmwr_year,mmwr_week, birth_rate)
births_1980 = data.frame(mmwr_year=as.numeric(seq(1980:1994)),mmwr_week=rep(1,15),birth_rate=rep(births$birth_rate[1],5))
births = rbind(births_1980,births)
View(births)
View(births_1980)
births_1980 = data.frame(mmwr_year=as.numeric(seq(1980:1994)),mmwr_week=rep(1,15),birth_rate=rep(births$birth_rate[1],5))
View(births_1980)
births_1980 = data.frame(mmwr_year=seq(1980:1994),mmwr_week=rep(1,15),birth_rate=rep(births$birth_rate[1],5))
View(births_1980)
births_1980 = data.frame(mmwr_year=seq(1980:1994)+1979,mmwr_week=rep(1,15),birth_rate=rep(births$birth_rate[1],5))
View(births_1980)
births_1980 = data.frame(mmwr_year=seq(1:15)+1979,mmwr_week=rep(1,15),birth_rate=rep(births$birth_rate[1],5))
View(births_1980)
births = rbind(births_1980,births)
View(births)
# 2. Birth Rates --------------------------------------------------------
births = readRDS("Demographic Data/birth_rates_by_county.rds") %>%
filter(state=="WA",county=="King County") %>%
mutate(mmwr_year=as.numeric(year),
mmwr_week=as.numeric(1)) %>%
select(mmwr_year,mmwr_week, birth_rate)
births_1980 = data.frame(mmwr_year=seq(1:15)+1979,mmwr_week=rep(1,15),birth_rate=rep(births$birth_rate[1],5))
births = rbind(births_1980,births)
View(births)
fill_in = data.frame(date =seq(from=as.Date('1980-01-06'), to=as.Date("2025-10-01"), by=7)) %>%
mutate(mmwr_week(date))
View(fill_in)
birth_interp = births %>%
right_join(fill_in, by=c("mmwr_year","mmwr_week")) %>%
arrange(date) %>%
mutate(birth_rate = na_locf(birth_rate))
birth_complete = data.frame(date = birth_interp$date,
V1 = birth_interp$birth_rate,
V2 = rep(0,nrow(birth_interp)),
V3 = rep(0,nrow(birth_interp)),
V4 = rep(0,nrow(birth_interp)),
V5 = rep(0,nrow(birth_interp)),
V6 = rep(0,nrow(birth_interp)),
V7 = rep(0,nrow(birth_interp)),
V8 = rep(0,nrow(birth_interp)),
V9 = rep(0,nrow(birth_interp)),
V10 = rep(0,nrow(birth_interp)),
V11 = rep(0,nrow(birth_interp)),
V12 = rep(0,nrow(birth_interp)),
V13 = rep(0,nrow(birth_interp)))
View(birth_complete)
write.csv(birth_complete,"births_kingcounty.csv")
saveRDS(birth_complete,"births_kingcounty.rds")
um = ((pop_1980-sum(yinit.vector))/2387)/((pop_1980+yinit.vector)/2)
pop_1980-sum(yinit.vector)
sum(yinit.vector)-pop_1980
sum(yinit.vector)
um = ((sum(yinit.matrix)-pop_1980)/2387)/((pop_1980+yinit.vector)/2)
sum(yinit.matrix)
View(yinit)
sum(yinit
sum(yinit)
sum(yinit)
sum(unlist(yinit))
um = ((sum(unlist(yinit))-pop_1980)/2387)/((pop_1980+sum(unlist(yinit)))/2)
other_parms = c("seed"=seed, "um"=um)
saveRDS(other_parms,"other_parms.rds")
rm(list=ls())
library(deSolve)
library(RColorBrewer)
library(reshape2)
library(tidyverse)
library(ggplot2)
library(cowplot)
library(sjstats)
library(cdcfluview)
library(zoo)
library(imputeTS)
library(readxl)
library(tidycensus)
"%notin%" = Negate('%in%')
setwd("C:/Users/hansencl/OneDrive - National Institutes of Health/Desktop/GitHub Updates/Data")
#Get population estimates for the most recent population size estimate
#This will be scaled down to the 1995 population size for the burn-in period
#you can fill in the initiate_compartments spreadsheet or use the code below
pop = get_estimates(
geography = "county",
product = "characteristics",
breakdown = c("AGEGROUP"),
breakdown_labels = TRUE,
state = "WA",
county = "King",
year = 2022
)%>%
select(AGEGROUP,value)
new_agegrps = c("all","0to4","5to9",rep("10to19",2),rep("20-39",4),rep("40to64",5),rep("65+",5))
pop = pop %>%
mutate(new_age = factor(new_agegrps,levels=unique(new_agegrps))) %>%
group_by(new_age) %>%
summarize(population = sum(value))
pop_2022 = pop %>% filter(new_age=="all")
pop_2022=pop_2022$population
#pop_1980 = 1270000
pop_1995 = readRDS("Demographic Data/birth_rates_by_county.rds") %>%
filter(state=="WA",county=="King County",year==1995)
pop_1995=pop_1995$population
#This will look the same as the initiate_compartments spreadsheet
M = c(rep(pop[2,2]*.034,3),rep(0,10))
S0 = c(rep(0,3),rep(pop[2,2]*.034,3),pop[2,2]*.2,pop[2,2]*.6,pop[3,2],pop[4,2],pop[5,2],pop[6,2],pop[7,2])
I1 = c(rep(0,3),rep(1,10))
R1 = rep(0,13)
S1 = rep(0,13)
I2 = rep(0,13)
R2 = rep(0,13)
S2 = rep(0,13)
I3 = rep(0,13)
R3 = rep(0,13)
S3 = rep(0,13)
I4 = rep(0,13)
R4 = rep(0,13)
Mn = rep(0,13)
Mv = rep(0,13)
N = rep(0,13)
Vs1 = rep(0,13)
Vs2 = rep(0,13)
yinit=matrix(unlist(cbind(M,S0,I1,R1,S1,I2,R2,S2,I3,R3,S3,I4,R4,Mn,Mv,N,Si,Vs1,Vs2)),byrow=FALSE,ncol=19)
Si = rep(0,13)
Vs1 = rep(0,13)
Vs2 = rep(0,13)
yinit=matrix(unlist(cbind(M,S0,I1,R1,S1,I2,R2,S2,I3,R3,S3,I4,R4,Mn,Mv,N,Si,Vs1,Vs2)),byrow=FALSE,ncol=19)
yinit[,1:2]= yinit[,1:2]*(pop_1995/pop_2022)
View(yinit)
colnames(yinit) = c("M","S0","I1","R1","S1","I2","R2","S2","I3","R3","S3","I4","R4","Mn","Mv","N","Si","Vs1","Vs2")
test = yinit[,1:13]
View(test)
saveRDS(yinit,"Demographic Data/yinit_interventions.rds")
saveRDS(yinit[,1:13],"Demographic Data/yinit.rds")
#format the data for feeding into the model
N_ages <- nrow(yinit)
agenames <- c("<2m","2-3m","4-5m","6-7m","8-9m","10-11m","1Y","2-4Y","5-9Y","10-19Y","20-39Y","40-64Y","65Y+")
al <- N_ages
rownames(yinit) <- agenames
yinit.vector <- as.vector(unlist(yinit))
name.array <- array(NA, dim=dim(yinit))
for(i in 1:dim(name.array)[1]){
for(j in 1:dim(name.array)[2]){
name.array[i,j] <- paste(dimnames(yinit)[[1]][i],dimnames(yinit)[[2]][j]  )
}
}
name.vector <- as.vector(name.array)
names(yinit.vector) <- name.vector
yinit.vector = yinit.vector
yinit.vector
#format the data for feeding into the model
N_ages <- nrow(yinit[,1:13])
agenames <- c("<2m","2-3m","4-5m","6-7m","8-9m","10-11m","1Y","2-4Y","5-9Y","10-19Y","20-39Y","40-64Y","65Y+")
al <- N_ages
rownames(yinit[,1:13]) <- agenames
yinit.vector <- as.vector(unlist(yinit[,1:13]))
name.array <- array(NA, dim=dim(yinit[,1:13]))
for(i in 1:dim(name.array)[1]){
for(j in 1:dim(name.array)[2]){
name.array[i,j] <- paste(dimnames(yinit[,1:13])[[1]][i],dimnames(yinit[,1:13])[[2]][j]  )
}
}
name.vector <- as.vector(name.array)
names(yinit.vector) <- name.vector
#format the data for feeding into the model
N_ages <- nrow(yinit)
agenames <- c("<2m","2-3m","4-5m","6-7m","8-9m","10-11m","1Y","2-4Y","5-9Y","10-19Y","20-39Y","40-64Y","65Y+")
al <- N_ages
rownames(yinit) <- agenames
yinit.vector <- as.vector(unlist(yinit))
name.array <- array(NA, dim=dim(yinit))
for(i in 1:dim(name.array)[1]){
for(j in 1:dim(name.array)[2]){
name.array[i,j] <- paste(dimnames(yinit)[[1]][i],dimnames(yinit)[[2]][j]  )
}
}
name.vector <- as.vector(name.array)
names(yinit.vector) <- name.vector
test = yinit.vector[1:169]
saveRDS(yinit.vector, "Demographic Data/yinit.vector_interventions.rds")
saveRDS(yinit.vector[1:169], "Demographic Data/yinit.vector.rds")
rm(list=ls())
library(deSolve)
library(RColorBrewer)
library(reshape2)
library(tidyverse)
library(ggplot2)
library(cowplot)
library(sjstats)
library(cdcfluview)
library(zoo)
library(imputeTS)
library(readxl)
library(tidycensus)
"%notin%" = Negate('%in%')
setwd("C:/Users/hansencl/OneDrive - National Institutes of Health/Desktop/GitHub Updates/Data")
#Get population estimates for the most recent population size estimate
#This will be scaled down to the 1995 population size for the burn-in period
#you can fill in the initiate_compartments spreadsheet or use the code below
pop = get_estimates(
geography = "county",
product = "characteristics",
breakdown = c("AGEGROUP"),
breakdown_labels = TRUE,
state = "WA",
county = "King",
year = 2022)%>%
select(AGEGROUP,value)
View(pop)
new_agegrps = c("all","0to4","5to9",rep("10to19",2),rep("20-39",4),rep("40to59",4),rep("60+",6))
pop = pop %>%
mutate(new_age = factor(new_agegrps,levels=unique(new_agegrps))) %>%
group_by(new_age) %>%
summarize(population = sum(value))
View(pop)
pop_2022 = pop %>% filter(new_age=="all")
pop_2022=pop_2022$population
#pop_1980 = 1270000
pop_1995 = readRDS("Demographic Data/birth_rates_by_county.rds") %>%
filter(state=="WA",county=="King County",year==1995)
pop_1995=pop_1995$population
pop_state = get_estimates(
geography = "state",
product = "characteristics",
breakdown = c("AGE"),
breakdown_labels = TRUE,
state = "WA",
county = "King",
year = 2022)%>%
select(AGEGROUP,value)
pop_state = get_estimates(
geography = "state",
product = "characteristics",
breakdown = c("AGE"),
breakdown_labels = TRUE,
state = "WA",
county = "King",
year = 2022)%>%
select(AGE,value)
View(pop_state)
#get more refined age distributions for the <5 year olds using state level data
state_under5 = get_estimates(
geography = "state",
product = "characteristics",
breakdown = c("AGE"),
breakdown_labels = TRUE,
state = "WA",
county = "King",
year = 2022)%>%
select(AGE,value) %>%
filter(AGE<5)
View(state_under5)
sum(state_under5$value[3:5])/sum(state_under5$value)
sum(state_under5$value[2])/sum(state_under5$value)
sum(state_under5$value[1])/sum(state_under5$value)/6
#This will look the same as the initiate_compartments spreadsheet
M = c(rep(pop[2,2]*.034,3),rep(0,10))
S0 = c(rep(0,3),rep(pop[2,2]*.034,3),pop[2,2]*.2,pop[2,2]*.6,pop[3,2],pop[4,2],pop[5,2],pop[6,2],pop[7,2])
I1 = c(rep(0,3),rep(1,10))
R1 = rep(0,13)
S1 = rep(0,13)
I2 = rep(0,13)
R2 = rep(0,13)
S2 = rep(0,13)
I3 = rep(0,13)
R3 = rep(0,13)
S3 = rep(0,13)
I4 = rep(0,13)
R4 = rep(0,13)
Mn = rep(0,13)
Mv = rep(0,13)
N = rep(0,13)
Si = rep(0,13)
Vs1 = rep(0,13)
Vs2 = rep(0,13)
yinit=matrix(unlist(cbind(M,S0,I1,R1,S1,I2,R2,S2,I3,R3,S3,I4,R4,Mn,Mv,N,Si,Vs1,Vs2)),byrow=FALSE,ncol=19)
View(yinit)
yinit[,1:2]= yinit[,1:2]*(pop_1995/pop_2022)#adjust population size to 1995
colnames(yinit) = c("M","S0","I1","R1","S1","I2","R2","S2","I3","R3","S3","I4","R4","Mn","Mv","N","Si","Vs1","Vs2")
saveRDS(yinit,"Demographic Data/yinit_interventions.rds")
saveRDS(yinit[,1:13],"Demographic Data/yinit.rds")
#format the data for feeding into the model
N_ages <- nrow(yinit)
agenames <- c("<2m","2-3m","4-5m","6-7m","8-9m","10-11m","1Y","2-4Y","5-9Y","10-19Y","20-39Y","40-64Y","65Y+")
al <- N_ages
rownames(yinit) <- agenames
yinit.vector <- as.vector(unlist(yinit))
name.array <- array(NA, dim=dim(yinit))
for(i in 1:dim(name.array)[1]){
for(j in 1:dim(name.array)[2]){
name.array[i,j] <- paste(dimnames(yinit)[[1]][i],dimnames(yinit)[[2]][j]  )
}
}
name.vector <- as.vector(name.array)
names(yinit.vector) <- name.vector
saveRDS(yinit.vector, "Demographic Data/yinit.vector_interventions.rds")#save the full version
saveRDS(yinit.vector[1:169], "Demographic Data/yinit.vector.rds")#save a version without the intervention compartments
#seeding 1 infection per 100,000 (based on 2022 population)
seed = pop_2022/100000 #seeding 1 infection per 100,000 (based on 2022 population)
# 2. Birth Rates --------------------------------------------------------
births = readRDS("Demographic Data/birth_rates_by_county.rds") %>%
filter(state=="WA",county=="King County") %>%
mutate(mmwr_year=as.numeric(year),
mmwr_week=as.numeric(1)) %>%
select(mmwr_year,mmwr_week, birth_rate)
fill_in = data.frame(date =seq(from=as.Date('1995-01-07'), to=as.Date("2025-10-01"), by=7)) %>%
mutate(mmwr_week(date))
birth_interp = births %>%
right_join(fill_in, by=c("mmwr_year","mmwr_week")) %>%
arrange(date) %>%
mutate(birth_rate = na_locf(birth_rate))
View(birth_interp)
birth_interp = births %>%
right_join(fill_in, by=c("mmwr_year","mmwr_week")) %>%
arrange(date) %>%
mutate(birth_rate = na_locf(birth_rate))
View(birth_interp)
birth_complete = data.frame(date = birth_interp$date,
V1 = birth_interp$birth_rate,
V2 = rep(0,nrow(birth_interp)),
V3 = rep(0,nrow(birth_interp)),
V4 = rep(0,nrow(birth_interp)),
V5 = rep(0,nrow(birth_interp)),
V6 = rep(0,nrow(birth_interp)),
V7 = rep(0,nrow(birth_interp)),
V8 = rep(0,nrow(birth_interp)),
V9 = rep(0,nrow(birth_interp)),
V10 = rep(0,nrow(birth_interp)),
V11 = rep(0,nrow(birth_interp)),
V12 = rep(0,nrow(birth_interp)),
V13 = rep(0,nrow(birth_interp)))
View(birth_complete)
saveRDS(birth_complete,"Demographic Data/births_kingcounty.rds")
View(birth_complete)
weeks = 1461 #number of weeks from January 1995 to December 2022 (check in births data frame)
um = ((pop_2022-pop_1995)/weeks)/((pop_2022+pop_1995)/2)
#save the parameters
other_parms = c("seed"=seed, "um"=um,"pop"=pop_2022)
saveRDS(other_parms,"Demographic Data/other_parms.rds")
rm(list=ls())
library(deSolve)
library(RColorBrewer)
library(reshape2)
library(tidyverse)
library(ggplot2)
library(cowplot)
library(sjstats)
library(cdcfluview)
library(zoo)
library(imputeTS)
library(readxl)
library(tidycensus)
"%notin%" = Negate('%in%')
setwd("C:/Users/hansencl/OneDrive - National Institutes of Health/Desktop/GitHub Updates/Data")
check = readRDS("RSV Data/age_distributions.rds")
View(check)
new_ages = c(rep("<6m",3),rep(">6m",3),"1-4yrs","5-59yrs","60+yrs")
new_ages=rep(new_ages,2)
check$age2 = new_ages
View(check)
check = check %>% group_by(age2) %>%
summarize(prop = sum(prop_hosp))
View(check)
check = readRDS("RSV Data/age_distributions.rds")
View(check)
new_ages = c(rep("<6m",3),rep(">6m",3),"1-4yrs","5-59yrs","60+yrs")
new_ages=rep(new_ages,2)
check$age2 = new_ages
check = check %>% group_by(age2,period) %>%
summarize(prop = sum(prop_hosp))
View(check)
saveRDS(check,"age_distributions.rds")
